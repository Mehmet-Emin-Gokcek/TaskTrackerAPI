// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskTrackerAPI.Data;

namespace TaskTrackerAPI.Migrations
{
    [DbContext(typeof(UserTaskContext))]
    [Migration("20210606054327_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "6.0.0-preview.4.21253.1")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TaskTrackerAPI.Models.UserTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Reminder")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("UserTasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = "Feb 5th at 2:30pm",
                            Description = "Doctors Appointment",
                            Location = "1212 5th St.",
                            Reminder = false
                        },
                        new
                        {
                            Id = 2,
                            Date = "May 10th at 1:30pm",
                            Description = "Teacher Parent Conference",
                            Location = "5332 34th St.",
                            Reminder = false
                        },
                        new
                        {
                            Id = 3,
                            Date = "3321 15th St.",
                            Description = "Neighborhood Association Meeting",
                            Location = "May 15th at 12:30pm",
                            Reminder = true
                        },
                        new
                        {
                            Id = 4,
                            Date = "May 16th at 6:30pm",
                            Description = "Clean out the garage",
                            Reminder = true
                        },
                        new
                        {
                            Id = 5,
                            Date = "May 17th at 7:30pm",
                            Description = "Trim the edges in the backyard",
                            Reminder = true
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
